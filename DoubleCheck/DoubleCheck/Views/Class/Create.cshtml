@model DoubleCheck.Models.Class

@{
    ViewBag.Title = "Create Class";
}

<h2>Create New Class</h2>

@using (Html.BeginForm("Create", "Class", FormMethod.Post)) 
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <hr />

        <div class="form-group">
            @Html.LabelFor(model => model.Name, "Class Name", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Building, "Building", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Building, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Building, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Room_Num, "Room Number", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Room_Num, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Room_Num, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Start_Date, "Class Start Date", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Start_Date, new { htmlAttributes = new { @class = "form-control", @type = "date" } })
                @Html.ValidationMessageFor(model => model.Start_Date, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.End_Date, "Class End Date", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.End_Date, new { htmlAttributes = new { @class = "form-control", @type = "date" } })
                @Html.ValidationMessageFor(model => model.End_Date, "", new { @class = "text-danger" })
            </div>
        </div>

        <table id="time_periods">
            <tr>
                <th>Days</th>
                <th>Start Time</th>
                <th>End Time</th>
            </tr>
            <tr>
                <td>
                    <input list="days" name="day" />
                    <datalist id="days">
                        <option value="MWF"></option>
                        <option value="TTH"></option>
                        <option value="MW"></option>
                        <option value="M"></option>
                        <option value="T"></option>
                        <option value="W"></option>
                        <option value="TH"></option>
                        <option value="F"></option>
                        <option value="Sat"></option>
                        <option value="Sun"></option>
                    </datalist>
                </td>
                <td>
                    <input type="time" name="start_time" />
                </td>
                <td>
                    <input type="time" name="end_time" />
                </td>
            </tr>
        </table>
        <button onclick="addRowToTable()">Add Days</button>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

<script>
    function addRowToTable() {
        var table = document.getElementById("time_periods");

        var row = table.insertRow(-1);

        var cell1 = row.insertCell(0);
        var cell2 = row.insertCell(1);
        var cell3 = row.insertCell(2);

        //var row = table.rows[1].cloneNode(true);

        var current = table.rows.length - 1;

        /*row.cells[0].getElementsByTagName('input')[0].list = "days" + current.toString();
        row.cells[0].getElementsByTagName('input')[0].name = "day" + current.toString();
        row.cells[0].getElementsByTagName('datalist')[0].id = "days" + current.toString();

        row.cells[1].getElementsByTagName('input')[0].name = "start_time" + current.toString();
        row.cells[2].getElementsByTagName('input')[0].name = "end_time" + current.toString();

        table.appendChild(row);*/

        


        cell1.innerHTML = "<input list=\"days" + current.toString() + "\" name=\"day" + current.toString() + "\" />\
                              <datalist id=\"days" + current.toString() + "\">\
                                <option value=\"MWF\"></option>\
                                <option value=\"TTH\"></option>\
                                <option value=\"MW\"></option>\
                                <option value=\"M\"></option>\
                                <option value=\"T\"></option>\
                                <option value=\"W\"></option>\
                                <option value=\"TH\"></option>\
                                <option value=\"F\"></option>\
                                <option value=\"Sat\"></option>\
                                <option value=\"Sun\"></option>\
                            </datalist>";
        cell2.innerHTML = "<input type=\"time\" name=\"start_time" + current.toString() + "\" />";
        cell3.innerHTML = "<input type=\"time\" name=\"end_time" + current.toString() + " />";
    }
</script>
