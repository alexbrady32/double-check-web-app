@model DoubleCheck.Models.User

@{
    ViewBag.Title = "Reset Password";
}

<h2>Reset Password</h2>

@using (Html.BeginForm())
            {
    @Html.AntiForgeryToken()

    <div id="error_message" class="alert alert-danger hidden">
        <strong>@ViewBag.Error</strong>
    </div>

            <div class="form-horizontal">
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                @Html.HiddenFor(model => model.Id)
                @Html.HiddenFor(model => model.Username)
                @Html.HiddenFor(model => model.Email)
                @Html.HiddenFor(model => model.firstName)
                @Html.HiddenFor(model => model.lastName)
                @Html.HiddenFor(model => model.phone_num)
                @Html.HiddenFor(model => model.Cloze_Score)
                @Html.HiddenFor(model => model.canNotifyByEmail)
                @Html.HiddenFor(model => model.canNotifyByText)
                @Html.HiddenFor(model => model.ResetPasswordHash)
                @Html.HiddenFor(model => model.ResetPasswordExpiration)

                <div class="form-group">
                    <i class='fa fa-lock fa-lg input-trans control-label col-md-2'> New Password </i>
                    <div class="col-md-10">
                        <div class="create-input-block">
                            @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "create-input-field", @placeholder = "Password", @type = "password" } })
                            @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>

                <div class="form-group">
                    <i class='fa fa-lock fa-lg input-trans control-label col-md-2'> Retype Password </i>
                    <div class="col-md-10">
                        <input class="create-input-field" id="retypePassword" name="retypePassword" type="password" value="" />
                        @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
                    </div>
                </div>
                

                <div class="form-group">
                    <br />
                    <div class="col-md-offset-2 col-md-10">
                        <input type="submit" value="SAVE" class="acc-submit" />
                    </div>
                </div>
            </div>
}


<script>
    $(document).ready(function () {
        var error = '@ViewBag.Error';
        if (error != '') {
            $("#error_message").removeClass('hidden');
        }
    })
</script>
